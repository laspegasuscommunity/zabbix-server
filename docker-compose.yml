#`version: "3.5"` указывает версию формата файла Docker Compose, который будет использоваться. В данном случае это версия 3.5. Эта версия поддерживает такие возможности, как объекты `config`, `секреты` и опции `deploy` для развертывания сервисов в рое.
version: "3.5"

#Это определение сети под названием "docker_lasp" с именем сети по умолчанию. Эта сеть может использоваться для соединения различных служб, определенных в файле Docker Compose, позволяя им взаимодействовать друг с другом.
networks:
  docker_lasp:
    name: $DEFAULT_NETWORK

services:
  #`zabbix-server:` - это сервис в файле Docker Compose, который развертывает сервер Zabbix с поддержкой базы данных PostgreSQL. Он использует образ `zabbix/zabbix-server-pgsql:alpine-trunk` и настроен с ограничениями и резервированием ресурсов, переменными окружения, портами, томами и сетевыми настройками. Он также имеет имя контейнера и настроен на постоянный перезапуск.
  zabbix-server:
    #Установка ограничений и резервирования ресурсов для службы `zabbix-server` в файле Docker Compose. Он ограничивает использование CPU до 0,70 и памяти до 1G, а также резервирует для службы минимум 0,50 CPU и 512M памяти.
    deploy:
      resources:
        #Установка ограничений на ресурсы для службы `zabbix-server` в файле Docker Compose. Он ограничивает использование процессора до 0,70 и памяти до 1 Гб.
        limits:
          cpus: "0.70"
          memory: "1G"
        #Установка минимального резервирования ресурсов для службы `zabbix-server` в файле Docker Compose. Он резервирует для службы минимум 0,50 CPU и 512M памяти.
        reservations:
          cpus: "0.50"
          memory: "512M"
    #`env_file: - "zabbix.env"` указывает файл с именем `zabbix.env`, содержащий переменные окружения, которые будут использоваться службами Docker Compose. Этот файл находится в том же каталоге, что и файл Docker Compose, и используется для установки переменных окружения для сервисов без необходимости указывать их в самом файле Docker Compose.
    env_file:
      - "zabbix.env"
    #`image: zabbix/zabbix-server-pgsql:alpine-7.0-latest` указывает образ Docker, который будет использоваться для службы `zabbix-server` в файле Docker Compose. Он извлекает образ `zabbix-server-pgsql` из репозитория Docker Hub, поддерживаемого Zabbix LLC, с операционной системой Alpine Linux и Zabbix версии 7.0. Образ включает поддержку базы данных PostgreSQL, которая используется сервером Zabbix.
    image: zabbix/zabbix-server-pgsql:alpine-7.0-latest
    #Секция `labels` в службе `zabbix-server` файла Docker Compose добавляет метаданные в контейнер. Он включает информацию об описании сервиса, компании, которая его обслуживает, название компонента, тип используемой базы данных (PostgreSQL) и операционную систему. Эти метки можно использовать для организации и фильтрации контейнеров, а также для целей мониторинга и управления.
    labels:
      - "com.zabbix.description=Zabbix server with PostgreSQL database support"
      - "com.zabbix.company=Zabbix LLC"
      - "com.zabbix.component=zabbix-server"
      - "com.zabbix.dbtype=pgsql"
      - "com.zabbix.os=linux"
    #`порты: - "10051:10051"` открывает порт 10051 на контейнере для хост-машины, позволяя внешним системам общаться с сервером Zabbix, запущенным внутри контейнера. Первое число (10051) - это номер порта на хост-машине, а второе число (также 10051) - это номер порта внутри контейнера. Это позволяет направлять трафик на нужный сервис, запущенный внутри контейнера.
    ports:
      - "10051:10051"
    #`restart: always` - это параметр конфигурации в файле Docker Compose, который указывает, что контейнер всегда должен перезапускаться, если он останавливается по какой-либо причине, например, в результате сбоя или ручной остановки. Это гарантирует, что служба всегда будет доступна и запущена, даже в случае неожиданных сбоев.
    restart: always
    #Раздел `volumes` в службе `zabbix-server` файла Docker Compose указывает два монтирования томов для контейнера. Первое крепление тома отображает локальный каталог `./zabbix/export` на каталог контейнера `/var/lib/zabbix/export`, с правами чтения и записи (`rw`). Второе монтирование тома отображает локальный каталог `./zabbix/snmptraps` на каталог контейнера `/var/lib/zabbix/snmptraps`, также с правами чтения и записи (`rw`). Такое монтирование томов позволяет сохранять данные вне контейнера, чтобы к ним можно было получить доступ и изменить их, даже если контейнер остановлен или удален. В данном случае каталог `export` используется для экспорта данных с сервера Zabbix, а каталог `snmptraps` - для хранения SNMP-ловушек, полученных сервером Zabbix.
    volumes:
      #`- "./zabbix/export:/var/lib/zabbix/export:rw"` - это монтирование тома в службе `zabbix-server` файла Docker Compose. Оно сопоставляет локальный каталог `./zabbix/export` с каталогом контейнера `/var/lib/zabbix/export`, с разрешениями на чтение и запись (`rw`). Это позволяет сохранять данные за пределами контейнера, чтобы к ним можно было получить доступ и изменить их, даже если контейнер остановлен или удален. В данном случае каталог `export` используется для экспорта данных с сервера Zabbix.
      - "./zabbix/export:/var/lib/zabbix/export:rw"
      #`- "./zabbix/snmptraps:/var/lib/zabbix/snmptraps:rw"` - это монтирование тома в файле Docker Compose, которое отображает локальный каталог `./zabbix/snmptraps` на каталог контейнера `/var/lib/zabbix/snmptraps` с правами чтения и записи (`rw`). Это позволяет сохранять данные за пределами контейнера, чтобы к ним можно было получить доступ и изменить их, даже если контейнер остановлен или удален. В данном случае каталог `snmptraps` используется для хранения SNMP-ловушек, полученных сервером Zabbix.
      - "./zabbix/snmptraps:/var/lib/zabbix/snmptraps:rw"
    #`container_name: zabbix-server` задает имя контейнера для службы `zabbix-server` в файле Docker Compose - "zabbix-server". Это позволяет легко идентифицировать контейнер и управлять им, используя указанное имя, а не случайно сгенерированное имя.
    container_name: zabbix-server
    #Секция `depends_on` в службе `zabbix-web` файла Docker Compose указывает, что служба `zabbix-java-gateway` должна быть запущена до службы `zabbix-web`. Это означает, что служба `zabbix-web` зависит от службы `zabbix-java-gateway` и не может быть запущена, пока не запущена служба `zabbix-java-gateway`. Это важно, поскольку служба `zabbix-web` требует, чтобы служба `zabbix-java-gateway` была доступна для связи с сервером Zabbix.
    depends_on:
      - "zabbix-java-gateway"
    #`networks: - "docker_net"` определяет сеть под названием "docker_net", которую сервисы Docker Compose будут использовать для связи друг с другом. Это позволяет изолировать сервисы от других сетей и безопасно взаимодействовать внутри одной сети. Сеть создается автоматически Docker Compose при запуске служб, а службы подключаются к сети с помощью секции `networks` в конфигурации каждой службы.
    networks:
      - "docker_net"
